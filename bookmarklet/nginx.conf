
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    proxy_cache_path /usr/local/etc/nginx/cache/ levels=1:2 keys_zone=default:10m max_size=50m inactive=30d;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_min_length  500;
    gzip_proxied     any;
    gzip_comp_level 4;
    gzip_types  text/css text/javascript text/xml text/plain text/x-component application/javascript application/json application/xml application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml application/octet-stream;

    # HTTPS redirect
    #
    server {
       listen         8080;
       server_name    localhost;
       return         301 https://localhost:8081$request_uri;     
    }

    # HTTPS server
    #
    server {
       listen       8081 http2 ssl;
       server_name  localhost;
       add_header Strict-Transport-Security "max-age=31536000";

       ssl_certificate      /Users/faizan/.ssl/certs/ssl.cert;
       ssl_certificate_key  /Users/faizan/.ssl/certs/ssl.key;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://127.0.0.1:5000;
           proxy_redirect off;
           proxy_set_header Connection '';
           proxy_ssl_verify on;
           proxy_ssl_session_reuse on;
       }

       location /static/ {
           alias /Users/faizan/Documents/random_projects/bookmarklet/bookmarklet/static/;
           expires 30d;
           add_header Pragma public;
           add_header Cache-Control "public";
           proxy_set_header Connection '';
           # Configure out caches
           proxy_cache default;
           # Cache all 200 OK's for 30 days
           proxy_cache_valid 200 30d;
           # Use stale cache file in all errors from upstream if we can
           proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
           # Lock the cache so that only one request can populate it at a time
           proxy_cache_lock on;   
           # Verify and reuse our SSL session for our upstream connection
           proxy_ssl_verify on;
           proxy_ssl_session_reuse on;
       }
    }
    include servers/*;
}
